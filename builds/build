#!/bin/bash
# WWIVdbg Build Script.
#
# Required Variables:
#   WORKSPACE - Jenkins workspace
#   BUILD_NUMBER - Jenkins Build number
#   label - Linux  build label (i.e. centos7)

declare -r CMAKE_BIN=${CMAKE_BIN:-"cmake"}
declare -r CTEST_BIN=${CTEST_BIN:-"ctest"}
declare -r CPACK_BIN=${CPACK_BIN:-"cpack"}
declare -r WWIVDBG_ARCH="${label:-"i686"}"
declare -r RELEASE_VERSION=${RELEASE_VERSION:-"1.0.0"}
declare -r CMAKE_BINARY_DIR=${CMAKE_BINARY_DIR:-"${WORKSPACE}/_build"}
declare -r RELEASE_DIR=${RELEASE_DIR:-"${CMAKE_BINARY_DIR}/release"}
declare -r FULL_RELEASE="${RELEASE_VERSION}.${BUILD_NUMBER}"
declare -r RELEASE_ARCHIVE_FILE=wwiv-${WWIVDBG_ARCH}-${FULL_RELEASE}.tar.gz

echo "============================================================================="
echo "Workspace:        ${WORKSPACE}"
echo "CMake:            ${CMAKE_BIN}; Test: ${CTEST_BIN}; Pack: ${CPACK_BIN}"
echo "CMake Build:      ${CMAKE_BINARY_DIR}"
echo "Release Dir:      ${RELEASE_DIR}"
echo "Release:          ${FULL_RELEASE}"
echo "Archive:          ${RELEASE_ARCHIVE_FILE}"
echo "WWIVDBG_ARCH:         ${WWIVDBG_ARCH}"
echo "GCC:              $(gcc --version | head -1)"
echo "============================================================================="

# Delete any previous release archives before starting the build with set -e
rm ${WORKSPACE}/wwivdbg-*.tar.gz || /bin/true
rm ${CMAKE_BINARY_DIR}/wwivdbg-*.tar.gz || /bin/true
rm ${CMAKE_BINARY_DIR}/CMakeCache.txt
rm -rf "${RELEASE_DIR}"
rm -rf "${CMAKE_BINARY_DIR}/Testing"

set -e

echo "Creating ${CMAKE_BINARY_DIR} and ${RELEASE_DIR}"
mkdir -p "${CMAKE_BINARY_DIR}"
mkdir -p "${RELEASE_DIR}"

echo "Updating vcpkg"
pushd ${WORKSPACE}
./vcpkg/bootstrap-vcpkg.sh
popd

set -x
echo "Building binaries"
pushd ${CMAKE_BINARY_DIR}
${CMAKE_BIN} -G "Ninja" -DCMAKE_BUILD_TYPE=Debug \
      -DRELEASE_VERSION=${RELEASE_VERSION} \
      -DWWIVDBG_DISTRO=${WWIVDBG_ARCH}  \
      -DWWIVDBG_BUILD_NUMBER=${BUILD_NUMBER} \
      -DWWIVDBG_ARCH=${WWIVDBG_ARCH} \
      ${WORKSPACE} || exit /b

${CMAKE_BIN} --build . --config Debug

echo "============================================================================="
echo "                          **** RUNNING TESTS ****"
echo "============================================================================="

#${CTEST_BIN} --no-compress-output --output-on-failure -T Test || /bin/true
${CPACK_BIN} -G TGZ

popd
cd ${WORKSPACE}
mv ${CMAKE_BINARY_DIR}/${RELEASE_ARCHIVE_FILE} ${WORKSPACE}/${RELEASE_ARCHIVE_FILE}

echo "Archive file: ${WORKSPACE}/${RELEASE_ARCHIVE_FILE}"
echo "Contents:"
tar ztvf ${WORKSPACE}/${RELEASE_ARCHIVE_FILE}
